c[?7l[2J[0mSeaBIOS (version 1.16.3-debian-1.16.3-2)


iPXE (https://ipxe.org) 00:03.0 CA00 PCI2.10 PnP PMM+06FCAE00+06F0AE00 CA00
Press Ctrl-B to configure iPXE (PCI 00:03.0)...


Booting from ROM..=== Bienvenue dans AI-OS v4.0 ===
Systeme complet avec espace utilisateur

Multiboot detecte correctement.
=== Initialisation systeme interruptions ===
Etape 1: IDT...
Etape 2: PIC et handlers...
=== INITIALISATION SYSTEME INTERRUPTIONS ===
Step 1: Interruptions CPU d√©sactiv√©es
Step 2: Handlers d'exceptions install√©s
Step 3: Table des handlers initialis√©e
Step 4: Remapping du PIC...
PIC: D√©but du remappage...
PIC: Masques sauvegard√©s
PIC: ICW1 envoy√©
PIC: ICW2 envoy√© (offsets: PIC1=32, PIC2=40)
PIC: ICW3 envoy√© (cascade configur√©e)
PIC: ICW4 envoy√© (mode 8086)
PIC: Masques configur√©s - IRQ0/IRQ1 activ√©es
PIC: Remappage termin√© avec succ√®s
Step 4: PIC remapp√© avec succ√®s
Step 5: Enregistrement des handlers IRQ...
Step 5: Handlers IRQ enregistr√©s
Step 6: Configuration des entr√©es IDT...
Step 6: Entr√©es IDT configur√©es
Step 7: Diagnostic PIC...
=== DIAGNOSTIC PIC ===
PIC1 mask: 0b11111100 (0xFC)
IRQ0 (timer): ENABLED
IRQ1 (keyboard): ENABLED
======================
Step 8: Activation forc√©e des IRQ critiques...
Masque PIC final: 0xFC
Step 9: Activation des interruptions CPU...
Step 10: Test des interruptions...
=== SYSTEME INTERRUPTIONS PRET ===
IRQ0 (timer): activ√©
IRQ1 (keyboard): activ√©
Interruptions CPU: activ√©es
=====================================
Etape 3: Clavier PS/2 (interruptions temporairement desactivees)...
=== UNICODE KEYBOARD INIT (AZERTY) ===
Keyboard init done.
=== Systeme interruptions PRET ===
IRQ0 (timer): OK
IRQ1 (keyboard): OK
QEMU devrait maintenant generer les interruptions clavier.
Initialisation de la gestion memoire...
Physical Memory Manager initialise.
Virtual Memory Manager initialise.
Initrd trouve ! Initialisation...
Parsing initrd TAR archive...
Initrd initialized: 9 files found
Initialisation du systeme de taches...
Tache kernel creee.
Initialisation des appels systeme...
Creation des taches kernel de demonstration... DESACTIVE
Mode mono-tache pour stabilite maximale.
PHASE 2: Timer reactive pour interruptions clavier...
Timer reactive - Interruptions clavier fonctionnelles.
Lancement du shell interactif AI-OS...
Shell trouve ! Chargement...
Shell trouve. Preparation du lancement...

Lancement du Shell Utilisateur...
create_user_vmm_directory: start
ELF Loader: Starting...
  - Segment: vaddr=0x0x3ffff000, memsz=0x0x000000f4, perms=R-
  - Segment: vaddr=0x0x40000000, memsz=0x0x00000d6a, perms=R-
  - Segment: vaddr=0x0x40001000, memsz=0x0x000005e8, perms=R-
  - Segment: vaddr=0x0x40002ff4, memsz=0x0x0000000c, perms=RW
ELF loading complete. Entry point: 0x0x40000d5a
Allocating user stack...
User stack allocated at 0x0xafff0000 - 0x0xb0000000
User context setup complete. EIP=0x0x40000d5a, ESP=0x0xb0000000
Tache utilisateur creee avec succes
Tache shell prete. Demarrage du timer...

=== AI-OS v6.0 - Force le premier changement de contexte ===
Declencher immediatement le planificateur...
--- DEBUT TEST UTF-8 ---
Test accents: √©√†√ß√™√º
Test symboles: ‚Ç¨
Test emoji: ü§ñ
Test texte complet: Bonjour le monde! Comment ca va, l'ami? ‚Ç¨‚Ç¨‚Ç¨
--- FIN TEST UTF-8 ---
