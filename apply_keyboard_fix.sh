#!/bin/bash

# Script d'application de la correction clavier AI-OS
# Applique automatiquement tous les correctifs et commit sur GitHub

set -e

echo "=== APPLICATION CORRECTION CLAVIER AI-OS ==="
echo "Correction du probl√®me des codes PS/2 ACK au lieu des scancodes"
echo ""

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "Makefile" ] || [ ! -d "kernel" ]; then
    echo "ERREUR: Veuillez ex√©cuter ce script depuis le r√©pertoire racine d'AI-OS"
    exit 1
fi

# √âtape 1: Appliquer la correction du driver clavier
echo "üîß √âtape 1: Application de la correction du driver clavier..."
if [ -f "kernel/keyboard_fixed.c" ]; then
    echo "   - Sauvegarde de l'ancien driver: kernel/keyboard.c.backup"
    cp kernel/keyboard.c kernel/keyboard.c.backup
    
    echo "   - Application de la nouvelle version corrig√©e"
    cp kernel/keyboard_fixed.c kernel/keyboard.c
    
    echo "   ‚úÖ Driver clavier corrig√© appliqu√©"
else
    echo "   ‚ùå ERREUR: Fichier kernel/keyboard_fixed.c non trouv√©!"
    exit 1
fi

# √âtape 2: Rendre les scripts ex√©cutables
echo ""
echo "üõ†Ô∏è √âtape 2: Configuration des permissions des scripts..."
chmod +x test_keyboard_ultimate.sh
chmod +x apply_keyboard_fix.sh
echo "   ‚úÖ Permissions configur√©es"

# √âtape 3: Test de compilation pour v√©rifier que tout fonctionne
echo ""
echo "üî® √âtape 3: Test de compilation..."
make clean > /dev/null 2>&1
if make > compile_test.log 2>&1; then
    echo "   ‚úÖ Compilation r√©ussie"
    rm -f compile_test.log
else
    echo "   ‚ùå ERREUR de compilation!"
    echo "   Voir compile_test.log pour les d√©tails"
    exit 1
fi

# √âtape 4: Cr√©er un rapport de correction
echo ""
echo "üìù √âtape 4: G√©n√©ration du rapport de correction..."
cat > CORRECTION_CLAVIER_ULTIME.md << 'EOF'
# Correction Ultime du Probl√®me Clavier AI-OS

## Probl√®me Identifi√©

Le clavier de l'AI-OS ne fonctionnait pas correctement car :
1. Le handler IRQ1 √©tait appel√© mais ne recevait que des codes PS/2 ACK (0xFA) au lieu de scancodes
2. L'initialisation du contr√¥leur PS/2 √©tait incompl√®te
3. Les d√©lais entre les op√©rations PS/2 √©taient insuffisants
4. La gestion des codes de contr√¥le PS/2 n'√©tait pas optimale

## Solution Impl√©ment√©e

### Corrections du Driver (`kernel/keyboard.c`)

1. **Initialisation PS/2 Compl√®te** :
   - Ajout d'un reset complet du p√©riph√©rique clavier (commande 0xFF)
   - D√©lais appropri√©s entre les op√©rations PS/2
   - Vidage syst√©matique des buffers √† chaque √©tape
   - Configuration explicite du scancode set 1

2. **Gestion Am√©lior√©e des Codes PS/2** :
   - Distinction claire entre les codes de contr√¥le (0xFA, 0xFE, 0xAA) et les scancodes
   - Handler d'interruption optimis√© avec moins de debug spam
   - Timeout am√©lior√© dans keyboard_getc()

3. **Stabilisation** :
   - Ajout de d√©lais de stabilisation apr√®s l'initialisation
   - Fonctions d'attente robustes pour les op√©rations PS/2
   - Gestion d'erreur am√©lior√©e

### Script de Test Optimis√© (`test_keyboard_ultimate.sh`)

1. **Param√®tres QEMU Sp√©cialis√©s** :
   - CPU Pentium3 avec meilleur support PS/2
   - Interface graphique GTK native
   - √âmulation clavier PS/2 compl√®te
   - Logs d'interruptions d√©taill√©s

2. **Processus de Test Guid√©** :
   - Instructions claires pour l'utilisateur
   - Application automatique des corrections
   - V√©rification de compilation
   - Lancement QEMU optimis√©

## R√©sultats Attendus

Apr√®s cette correction :
- ‚úÖ Le clavier devrait g√©n√©rer des vrais scancodes au lieu de codes ACK
- ‚úÖ Le shell devrait r√©pondre aux frappes de touches
- ‚úÖ Les commandes devraient fonctionner normalement
- ‚úÖ Les interruptions IRQ1 devraient traiter les caract√®res correctement

## Test de la Correction

```bash
# Appliquer la correction
./apply_keyboard_fix.sh

# Tester le clavier avec QEMU optimis√©
./test_keyboard_ultimate.sh
```

## Fichiers Modifi√©s

- `kernel/keyboard.c` - Driver clavier corrig√©
- `test_keyboard_ultimate.sh` - Script de test optimis√©
- `apply_keyboard_fix.sh` - Script d'application des corrections
- `CORRECTION_CLAVIER_ULTIME.md` - Ce rapport

---
*Correction appliqu√©e le $(date)*
EOF

echo "   ‚úÖ Rapport g√©n√©r√©: CORRECTION_CLAVIER_ULTIME.md"

# √âtape 5: Pr√©parer le commit
echo ""
echo "üì¶ √âtape 5: Pr√©paration du commit Git..."
echo "   - Ajout des nouveaux fichiers au git"

# V√©rifier si c'est un repository git
if [ ! -d ".git" ]; then
    echo "   - Initialisation du repository git"
    git init
    git config user.name "kamgueblondin" 2>/dev/null || true
    git config user.email "kamgueblondin@gmail.com" 2>/dev/null || true
fi

# Ajouter les fichiers
git add kernel/keyboard.c
git add kernel/keyboard_fixed.c
git add test_keyboard_ultimate.sh
git add apply_keyboard_fix.sh
git add CORRECTION_CLAVIER_ULTIME.md

# Si il y a un backup, l'ajouter aussi
if [ -f "kernel/keyboard.c.backup" ]; then
    git add kernel/keyboard.c.backup
fi

echo "   ‚úÖ Fichiers ajout√©s au git"

echo ""
echo "üéâ CORRECTION APPLIQU√âE AVEC SUCC√àS !"
echo ""
echo "üìã PROCHAINES √âTAPES :"
echo "   1. Testez la correction avec: ./test_keyboard_ultimate.sh"
echo "   2. Si le test fonctionne, commitez avec:"
echo "      git commit -m \"Correction ultime du probl√®me clavier - Reset PS/2 complet et QEMU optimis√©\""
echo "   3. Puis poussez sur GitHub avec:"
echo "      git push origin master"
echo ""
echo "üîç FICHIERS MODIFI√âS :"
echo "   - kernel/keyboard.c (driver corrig√©)"
echo "   - test_keyboard_ultimate.sh (test optimis√©)"
echo "   - apply_keyboard_fix.sh (ce script)"
echo "   - CORRECTION_CLAVIER_ULTIME.md (rapport)"
echo ""
echo "üìñ Lisez CORRECTION_CLAVIER_ULTIME.md pour les d√©tails complets."
